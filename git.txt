#CREATE A REPO --
*******************************
git init
git clone
git status
*******************************
git init : create a new repository 
git clone : clone the existing repository from somewhere else 
git status : check the status of the repository

#REVIEW A REPO --
*********************
git log 
git log --oneline
git log --stat
git log -p
*********************

git log : display information about the existing commits
git show : display information about the given commit

git log --oneline : SHA id and the commit messages .Alters the way of displaying information.
       ******not online it's oneline******

q key can be used to get out of the git log --oneline and return to the regular command prompt.

git log --stat : stat refers to statistics. This command display the files that have been changed in the commit, as well as the number of lines that have been added or deleted.

git log -p : p refers to patch.This command can be used to display the actual changes made to a file.

#ADD & COMMIT TO THE REPOSITORY --
******************************
git add
git commit 
git diff
git ignore
******************************
git add : add files from the working directory to staging index.
git commit : takes files from the staging index and save them to the repository.
git diff : displays the difference between two versions of the file
git ignore : 

Bypass The Editor With The -m Flag
git commit -m "Commit Messages"

Note: If you accidentally ran git add then use git rm --cached <file > to unstage

also $ git config --global core.editor <your-editor's-config-went-here>
              configure Git to use your chosen editor










